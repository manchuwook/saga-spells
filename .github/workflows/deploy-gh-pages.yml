name: Deploy to GitHub Pages

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'github-pages'
        type: choice
        options:
          - github-pages
          - staging

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          version: 10
          
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
        
      - name: Build
        run: pnpm build:prod
        
      - name: Create deployment info file
        run: |
          cat > dist/deployment-info.json << EOL
          {
            "version": "${{ github.sha }}",
            "branch": "${{ github.ref_name }}",
            "buildTime": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
            "environment": "${{ github.event.inputs.environment || 'github-pages' }}"
          }
          EOL
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
          
  deploy:
    environment:
      name: ${{ github.event.inputs.environment || 'github-pages' }}
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
      
      - name: Create deployment comment
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ App successfully deployed to GitHub Pages!\n\nURL: ${process.env.DEPLOYMENT_URL}\n\nEnvironment: ${process.env.ENVIRONMENT}`
            })
        env:
          DEPLOYMENT_URL: ${{ steps.deployment.outputs.page_url }}
          ENVIRONMENT: ${{ github.event.inputs.environment || 'github-pages' }}
